# Generated by Django 4.1 on 2023-11-15 02:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AnalysisResult",
            fields=[
                (
                    "timestamp",
                    models.TextField(blank=True, primary_key=True, serialize=False),
                ),
                ("year", models.IntegerField(blank=True, null=True)),
                (
                    "actual_value_field",
                    models.FloatField(blank=True, db_column="actual_value ", null=True),
                ),
                (
                    "predicted_value_field",
                    models.FloatField(
                        blank=True, db_column="predicted_value ", null=True
                    ),
                ),
                ("prediction_error", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "analysis_result",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codename", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
                ("first_name", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BackgroundTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_name", models.CharField(max_length=190)),
                ("task_params", models.TextField()),
                ("task_hash", models.CharField(max_length=40)),
                (
                    "verbose_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("priority", models.IntegerField()),
                ("run_at", models.DateTimeField()),
                ("repeat", models.BigIntegerField()),
                ("repeat_until", models.DateTimeField(blank=True, null=True)),
                ("queue", models.CharField(blank=True, max_length=190, null=True)),
                ("attempts", models.IntegerField()),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                ("last_error", models.TextField()),
                ("locked_by", models.CharField(blank=True, max_length=64, null=True)),
                ("locked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "creator_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "background_task",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BackgroundTaskCompletedtask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_name", models.CharField(max_length=190)),
                ("task_params", models.TextField()),
                ("task_hash", models.CharField(max_length=40)),
                (
                    "verbose_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("priority", models.IntegerField()),
                ("run_at", models.DateTimeField()),
                ("repeat", models.BigIntegerField()),
                ("repeat_until", models.DateTimeField(blank=True, null=True)),
                ("queue", models.CharField(blank=True, max_length=190, null=True)),
                ("attempts", models.IntegerField()),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                ("last_error", models.TextField()),
                ("locked_by", models.CharField(blank=True, max_length=64, null=True)),
                ("locked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "creator_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "background_task_completedtask",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Data",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("region", models.TextField(blank=True, null=True)),
                ("year", models.IntegerField(blank=True, null=True)),
                ("gdp", models.FloatField(blank=True, null=True)),
                ("company_loan", models.FloatField(blank=True, null=True)),
                ("sold_area", models.FloatField(blank=True, null=True)),
                ("completed_area", models.FloatField(blank=True, null=True)),
                ("consumption_index", models.FloatField(blank=True, null=True)),
                ("house_cost", models.FloatField(blank=True, null=True)),
                ("investment", models.FloatField(blank=True, null=True)),
                ("residents_income", models.FloatField(blank=True, null=True)),
                ("land_cost", models.FloatField(blank=True, null=True)),
                ("population", models.FloatField(blank=True, null=True)),
                ("lpr", models.FloatField(blank=True, null=True)),
                ("house_price", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
                ("action_time", models.DateTimeField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LprPerMonth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(blank=True, null=True)),
                ("month", models.IntegerField(blank=True, null=True)),
                ("lpr", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "LPR_per_month",
                "managed": False,
            },
        ),
    ]
